name: Release

on:
  workflow_dispatch:
    inputs:
      draft:
        description: 'Create as draft release'
        type: boolean
        default: true
        required: false

jobs:
  trigger-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - name: Get Version
        id: version
        shell: bash
        run: |
          VERSION=$(cat VERSION | tr -d '\n')
          echo "version=v${VERSION}" >> $GITHUB_OUTPUT

      # First trigger CI workflow and wait for completion
      - name: Trigger CI Workflow
        uses: convictional/trigger-workflow-and-wait@v1.6.1
        with:
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow_file_name: ci.yml
          wait_interval: 10
          trigger_workflow: true
          wait_workflow: true
          propagate_failure: true
          ref: ${{ github.ref }}

      # Download artifacts from all OS builds
      - name: Download CI Artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: ci.yml
          workflow_conclusion: success
          commit: ${{ github.sha }}
          path: artifacts

      - name: Prepare Release Assets
        run: |
          mkdir -p release_assets
          # Move and rename artifacts with proper OS names
          if [ -f "artifacts/windows-latest/tagfs-hello.exe" ]; then
            cp "artifacts/windows-latest/tagfs-hello.exe" "release_assets/tagfs-${{ steps.version.outputs.version }}-windows.exe"
          fi
          if [ -f "artifacts/ubuntu-latest/tagfs-hello" ]; then
            cp "artifacts/ubuntu-latest/tagfs-hello" "release_assets/tagfs-${{ steps.version.outputs.version }}-linux"
          fi
          if [ -f "artifacts/macos-latest/tagfs-hello" ]; then
            cp "artifacts/macos-latest/tagfs-hello" "release_assets/tagfs-${{ steps.version.outputs.version }}-macos"
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          draft: ${{ inputs.draft }}
          generate_release_notes: true
          files: release_assets/*